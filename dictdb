#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# Copyright (C) 2017 by the-c0d3r
# Author: the-c0d3r
#
# This program is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation; either version 3, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.


import argparse
import fileinput
import sys

from lib.controller import Controller

banner = r"""
       ___      __      ____  
  ____/ (_)____/ /_____/ / /_ 
 / __  / / ___/ __/ __  / __ \
/ /_/ / / /__/ /_/ /_/ / /_/ /
\__,_/_/\___/\__/\__,_/_.___/ 
    
dev: the-c0d3r
"""


def build_parser() -> argparse.ArgumentParser:
    parser = argparse.ArgumentParser(prog = banner)
    parser.add_argument("-i", "--interactive", action = "store_true", help = "interactive mode for all entries")
    parser.add_argument("-s", "--search", help = "search word")
    parser.add_argument("-a", "--add", help = "add new word")
    parser.add_argument("-d", "--delete", help = "delete word")
    parser.add_argument("-e", "--edit", help = "edit the existing definitions")
    parser.add_argument("-l", "--list", action = "store_true", help = "list all words")
    return parser


if __name__ == "__main__":
    parser = build_parser()
    args = parser.parse_args()

    args_list = [args.interactive, args.search, args.add, args.delete, args.list, args.edit]

    controller = Controller()

    # if stdout is not terminal (redirection or pipe), list everything
    if not sys.stdout.isatty():
        args.list = True
        controller.interact(args)
        exit()

    # if stdin is not terminal (redirection or pipe), import the content
    elif not sys.stdin.isatty():
        content = []
        for line in fileinput.input():
            content.append(line.strip())
        controller.load_content(content)
        exit()

    # if no arguments and not stdin/stdout piped, print help
    elif not any(args_list):
        parser.print_help()
        exit()

    controller.interact(args)
